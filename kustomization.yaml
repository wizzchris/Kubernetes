
---
apiVersion: v1
kind: Service
metadata:
  name: app
spec:
  selector:
    app: web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    name: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    role: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: elst
  labels:
    name: elst
spec:
  ports:
  - port: 9200
    targetPort: 9200
  clusterIP: None
  selector:
    elst: elst
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
spec:
  type: NodePort
  selector:
    kibana: kibana
  ports:
    - protocol: TCP
      port: 5601
      targetPort: 5601
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: default-view
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elst
spec:
  serviceName: "elst"
  replicas: 1
  selector:
    matchLabels:
      elst: elst
  template:
    metadata:
      labels:
        elst: elst
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: elst
          image: elstv1:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9200
          volumeMounts:
            - name: elst
              mountPath: /data/elst
          resources:
            requests:
              memory: 2048Mi
            limits:
              memory: 2048Mi
  volumeClaimTemplates:
  - metadata:
      name: elst
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 3
  selector:
    matchLabels:
     kibana: kibana
  template:
    metadata:
      labels:
        kibana: kibana
    spec:
      containers:
        - name: kibana
          image: kibanav1:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5601
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: v3-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: app
          image: appv1:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  replicas: 3
  selector:
    matchLabels:
      role: mongo
      environment: test
  template:
    metadata:
      labels:
        role: mongo
        environment: test
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: dbv1:latest
          imagePullPolicy: IfNotPresent
          command:
            - mongod
            - "--replSet"
            - rs0
            - "--bind_ip_all"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongo,environment=test"
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          serviceName: app
          servicePort: 80
      - path: /
        pathType: Prefix
        backend:
          serviceName: kibana
          servicePort: 5601
